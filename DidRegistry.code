.version sol 0.56.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 256
LDMSGADDR
ENDS
.loc DidRegistry.sol, 22
DUP2
CALLREF {
	CALL $Utils_no_obj_isPubKeyXorAddressNotEmpty_macro$
}
THROWIFNOT 202
.loc DidRegistry.sol, 23
ACCEPT
.loc DidRegistry.sol, 24
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHCONT {
	.loc DidRegistry.sol, 26
	DUP
	SETGLOB 12
}
PUSHCONT {
	.loc DidRegistry.sol, 30
	OVER
	SETGLOB 11
}
IFELSE
.loc DidRegistry.sol, 0
DROP2
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro issueDidDoc
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc DidRegistry.sol, 38
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 256
LDMSGADDR
LDREF
LDU 32
ENDS
.loc DidRegistry.sol, 0
CALLREF {
	CALL $issueDidDoc_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST xe91ba54e
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro issueDidDoc_internal_macro
.loc DidRegistry.sol, 114
CALLREF {
	CALL $isOwner_internal_macro$
}
THROWIFNOT 201
.loc DidRegistry.sol, 115
ACCEPT
.loc DidRegistry.sol, 43
OVER2
CALLREF {
	CALL $Utils_no_obj_isPubKeyXorAddressNotEmpty_macro$
}
THROWIFNOT 202
.loc DidRegistry.sol, 45
PUSHINT 1000000000
PUSHINT 500000000
ADD
UFITS 128
.loc DidRegistry.sol, 46
DROP
ACCEPT
.loc DidRegistry.sol, 49
LTIME
NEWC
STU 64
.loc DidRegistry.sol, 50
GETGLOB 10
CTOS
SWAP
ENDC

CALLREF {
	PUSH S1
	PUSHSLICE x8adb35
	SDEQ
	PUSHREFCONT {
		SWAP      ; salt sliceCode
		LDREF
		LDREF
		DROP         ; salt selfCallCode usualSelector
		XCHG S1, S2  ; selfCallCode salt usualSelector
		CTOS         ; selfCallCode salt usualSelector
		CALLREF {
			
			LDREFRTOS  ; selfCallCode salt restUsualSelector intSelector

			PUSHSLICE xF4A4_
			SDBEGINSX
			LDDICT     ; selfCallCode salt restUsualSelector dict intSelector
			LDU 10
			NIP
			DUP
			SREFS      ; selfCallCode salt restUsualSelector dict intSelector refs
			PUSHCONT {
				LDREF
			}
			PUSHCONT {
				PUSHREF {
				}
				SWAP
			}
			IFELSE
		                ; selfCallCode salt restUsualSelector dict version intSelector
			PUSHSLICE xF4A1
			SDBEGINSX
			DROP
			            ; selfCallCode salt restUsualSelector dict version
			SWAP        ; selfCallCode salt restUsualSelector version dict
			NEWC        ; selfCallCode salt restUsualSelector version dict builder
			STSLICECONST xF4A4_ ; DICTPUSHCONST
			STDICT
			PUSHINT 32
			STUR 10
			STSLICECONST xF4A1 ; DICTUGETJMP
			STREF       ; selfCallCode salt restUsualSelector builder
			XCHG S1, S2 ; selfCallCode restUsualSelector salt builder
			STREF       ; selfCallCode restUsualSelector builder
			NEWC        ; selfCallCode restUsualSelector builder usualBuilder
			STBREF      ; selfCallCode restUsualSelector usualBuilder
			STSLICE     ; selfCallCode usualBuilder

		}
		NEWC        ; selfCallCode usualBuilder mainBuilder
		STSLICECONST x8adb35
		XCHG S1, S2 ; usualBuilder selfCallCode mainBuilder
		STREF
		STBREF
		ENDC
	}
	PUSHREFCONT {
		SWAP
		CALLREF {
			
			LDREFRTOS  ; selfCallCode salt restUsualSelector intSelector

			PUSHSLICE xF4A4_
			SDBEGINSX
			LDDICT     ; selfCallCode salt restUsualSelector dict intSelector
			LDU 10
			NIP
			DUP
			SREFS      ; selfCallCode salt restUsualSelector dict intSelector refs
			PUSHCONT {
				LDREF
			}
			PUSHCONT {
				PUSHREF {
				}
				SWAP
			}
			IFELSE
		                ; selfCallCode salt restUsualSelector dict version intSelector
			PUSHSLICE xF4A1
			SDBEGINSX
			DROP
			            ; selfCallCode salt restUsualSelector dict version
			SWAP        ; selfCallCode salt restUsualSelector version dict
			NEWC        ; selfCallCode salt restUsualSelector version dict builder
			STSLICECONST xF4A4_ ; DICTPUSHCONST
			STDICT
			PUSHINT 32
			STUR 10
			STSLICECONST xF4A1 ; DICTUGETJMP
			STREF       ; selfCallCode salt restUsualSelector builder
			XCHG S1, S2 ; selfCallCode restUsualSelector salt builder
			STREF       ; selfCallCode restUsualSelector builder
			NEWC        ; selfCallCode restUsualSelector builder usualBuilder
			STBREF      ; selfCallCode restUsualSelector usualBuilder
			STSLICE     ; selfCallCode usualBuilder

		}
		ENDC
	}
	IFELSE
}
.loc DidRegistry.sol, 52
PUSH S4
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
MYADDR
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
SWAP
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
.loc DidRegistry.sol, 63
PUSH2 S3, S4
ROT
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
XCHG S4
PUSH S4
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHSLICE x000000000000000000000000007_
STSLICER
OVER
CALLREF {
	CTOS
	LDI 1
	SWAP
	PUSHCONT {
		LDI 5
		NIP
	}
	IF
	LDI 1
	SWAP
	PUSHCONT {
		LDI 2
		NIP
	}
	IF
	LDOPTREF
	LDOPTREF
	LDDICT
	ENDS
	BLKDROP 3
}
STREF
STSLICECONST 1
ROTREV
NEWC
STSLICECONST x01d53d1d
STU 256
STSLICE
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
.loc DidRegistry.sol, 70
PUSHINT 0
ROT
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000000e582d435_
STSLICER
STREF
STU 8
ENDC
PUSHINT 0
SENDRAWMSG
.loc DidRegistry.sol, 72
PUSH S2
NEQINT 1
PUSHCONT {
	.loc DidRegistry.sol, 73
	PUSH S2
	GETGLOB 14
	DUP2
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		LDU 32
		PLDDICT
	}
	PUSHCONT {
		PUSHINT 0
		NEWDICT
	}
	IFELSE
	PAIR
	PUXC S3, S-1
	UNPAIR
	OVER
	INC
	ROLLREV 3
	PUSHINT 32
	DICTUSET
	PAIR
	NEWC
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ROTREV
	PUSHINT 256
	DICTUSETB
	SETGLOB 14
	.loc DidRegistry.sol, 0
}
IF
.loc DidRegistry.sol, 74
OVER
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SDEQ
PUSHCONT {
	.loc DidRegistry.sol, 75
	OVER
	GETGLOB 13
	DUP2
	PUSHINT 267
	DICTGET
	PUSHCONT {
		LDU 32
		PLDDICT
	}
	PUSHCONT {
		PUSHINT 0
		NEWDICT
	}
	IFELSE
	PAIR
	PUXC S3, S-1
	UNPAIR
	OVER
	INC
	ROLLREV 3
	PUSHINT 32
	DICTUSET
	PAIR
	NEWC
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 13
	.loc DidRegistry.sol, 0
}
IFNOT
.loc DidRegistry.sol, 77
BLKDROP2 2, 1
.loc DidRegistry.sol, 0

.macro getDidDocs
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc DidRegistry.sol, 81
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 256
LDMSGADDR
ENDS
.loc DidRegistry.sol, 0
CALLREF {
	CALL $getDidDocs_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x00000000000000000000000039ae42a7a_
	STSLICER
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	SWAP
	UNPAIR
	XCHG S2
	STU 32
	STDICT
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro getDidDocs_internal_macro
.loc DidRegistry.sol, 85
DUP2
CALLREF {
	CALL $Utils_no_obj_isPubKeyXorAddressNotEmpty_macro$
}
THROWIFNOT 202
.loc DidRegistry.sol, 86
PUSHINT 0
NEWDICT
PAIR
.loc DidRegistry.sol, 87
PUSH S2
PUSHCONT {
	.loc DidRegistry.sol, 88
	PUSH S2
	GETGLOB 14
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		LDU 32
		PLDDICT
	}
	PUSHCONT {
		PUSHINT 0
		NEWDICT
	}
	IFELSE
	PAIR
	NIP
}
PUSHCONT {
	OVER
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SDEQ
	PUSHCONT {
		.loc DidRegistry.sol, 90
		OVER
		GETGLOB 13
		PUSHINT 267
		DICTGET
		PUSHCONT {
			LDU 32
			PLDDICT
		}
		PUSHCONT {
			PUSHINT 0
			NEWDICT
		}
		IFELSE
		PAIR
		NIP
		.loc DidRegistry.sol, 0
	}
	IFNOT
}
IFELSE
.loc DidRegistry.sol, 91
BLKDROP2 2, 1
.loc DidRegistry.sol, 0

.macro resetDocStorage
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc DidRegistry.sol, 94
ENDS
.loc DidRegistry.sol, 0
CALLREF {
	CALL $resetDocStorage_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	resetDocStorage_internal
.type	resetDocStorage_internal, @function
CALL $resetDocStorage_internal_macro$

.macro resetDocStorage_internal_macro
.loc DidRegistry.sol, 114
CALLREF {
	CALL $isOwner_internal_macro$
}
THROWIFNOT 201
.loc DidRegistry.sol, 115
ACCEPT
.loc DidRegistry.sol, 98
NEWDICT
SETGLOB 13
.loc DidRegistry.sol, 99
NEWDICT
SETGLOB 14
.loc DidRegistry.sol, 0

.macro setTemplate
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc DidRegistry.sol, 103
LDREF
ENDS
.loc DidRegistry.sol, 0
CALLREF {
	CALL $setTemplate_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setTemplate_internal_macro
.loc DidRegistry.sol, 114
CALLREF {
	CALL $isOwner_internal_macro$
}
THROWIFNOT 201
.loc DidRegistry.sol, 115
ACCEPT
.loc DidRegistry.sol, 107
SETGLOB 10
.loc DidRegistry.sol, 0

.globl	isOwner_internal
.type	isOwner_internal, @function
CALL $isOwner_internal_macro$

.macro isOwner_internal_macro
.loc DidRegistry.sol, 123
GETGLOB 11
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
DUP
PUSHCONT {
	DROP
	GETGLOB 12
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	EQINT 0
}
IF
GETGLOB 11
EQINT 0
GETGLOB 12
GETGLOB 9
SDEQ
AND
OR
.loc DidRegistry.sol, 0

.macro changeOwner
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc DidRegistry.sol, 127
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 256
LDMSGADDR
ENDS
.loc DidRegistry.sol, 0
CALLREF {
	CALL $changeOwner_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro changeOwner_internal_macro
.loc DidRegistry.sol, 130
CALLREF {
	CALL $isOwner_internal_macro$
}
THROWIFNOT 200
.loc DidRegistry.sol, 131
DUP2
CALLREF {
	CALL $Utils_no_obj_isPubKeyXorAddressNotEmpty_macro$
}
THROWIFNOT 202
.loc DidRegistry.sol, 132
ACCEPT
.loc DidRegistry.sol, 133
SWAP
SETGLOB 11
.loc DidRegistry.sol, 134
SETGLOB 12
.loc DidRegistry.sol, 0

.macro transfer
DROP
GETGLOB 6
THROWIFNOT 76
.loc DidRegistry.sol, 138
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 128
LDI 1
ENDS
.loc DidRegistry.sol, 0
CALLREF {
	CALL $transfer_internal_macro$
}
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	transfer_internal
.type	transfer_internal, @function
CALL $transfer_internal_macro$

.macro transfer_internal_macro
.loc DidRegistry.sol, 114
CALLREF {
	CALL $isOwner_internal_macro$
}
THROWIFNOT 201
.loc DidRegistry.sol, 115
ACCEPT
.loc DidRegistry.sol, 142
XCHG S1, S2
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
SWAP
STGRAMS
PUSHINT 107
STZEROES
ENDC
PUSHINT 0
SENDRAWMSG
.loc DidRegistry.sol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDREF
LDU 256
LDREF
ENDS
CTOS
LDMSGADDR
LDDICT
LDDICT
LDU 8
ENDS
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHREF {
	}
	PUSHINT 0
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	NEWDICT
	DUP
	PUSHINT 0
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 1
	SETGLOB 15
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STREF
STU 256
ROLLREV 4
NEWC
STSLICE
STDICT
STDICT
STU 8
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; havePubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro controllerPubKey
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 11
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000ecee102e
	NEWC
	STSLICE
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro controllerAddress
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 12
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000a10acad3
	NEWC
	STSLICE
	STSLICE
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.globl	Utils_with_obj_isPubKeyXorAddressNotEmpty
.type	Utils_with_obj_isPubKeyXorAddressNotEmpty, @function
CALL $Utils_with_obj_isPubKeyXorAddressNotEmpty_macro$

.macro Utils_with_obj_isPubKeyXorAddressNotEmpty_macro
.loc Utils.sol, 22
OVER
NEQINT 0
DUP
PUSHCONT {
	DROP
	DUP
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	EQINT 0
}
IF
DUP
PUSHCONT {
	DROP
	OVER
	EQINT 0
	DUP
	PUSHCONT {
		DROP
		DUP
		PARSEMSGADDR
		INDEX 3
		PLDU 256
		NEQINT 0
	}
	IF
}
IFNOT
NIP
.loc Utils.sol, 0

.globl	Utils_no_obj_isPubKeyXorAddressNotEmpty
.type	Utils_no_obj_isPubKeyXorAddressNotEmpty, @function
CALL $Utils_no_obj_isPubKeyXorAddressNotEmpty_macro$

.macro Utils_no_obj_isPubKeyXorAddressNotEmpty_macro
.loc Utils.sol, 22
OVER
NEQINT 0
DUP
PUSHCONT {
	DROP
	DUP
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	EQINT 0
}
IF
DUP
PUSHCONT {
	DROP
	OVER
	EQINT 0
	DUP
	PUSHCONT {
		DROP
		DUP
		PARSEMSGADDR
		INDEX 3
		PLDU 256
		NEQINT 0
	}
	IF
}
IFNOT
BLKDROP2 2, 1
.loc Utils.sol, 0

.macro public_function_selector
DUP
PUSHINT 965555433
LEQ
IFJMPREF {
	DUP
	PUSHINT 30752029
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 93235917
	EQUAL
	IFJMPREF {
		CALL $setTemplate$
	}
	DUP
	PUSHINT 554355411
	EQUAL
	IFJMPREF {
		CALL $controllerAddress$
	}
	DUP
	PUSHINT 965555433
	EQUAL
	IFJMPREF {
		CALL $resetDocStorage$
	}
}
DUP
PUSHINT 1763419470
LEQ
IFJMPREF {
	DUP
	PUSHINT 1702734340
	EQUAL
	IFJMPREF {
		CALL $transfer$
	}
	DUP
	PUSHINT 1723402910
	EQUAL
	IFJMPREF {
		CALL $getDidDocs$
	}
	DUP
	PUSHINT 1749150966
	EQUAL
	IFJMPREF {
		CALL $changeOwner$
	}
	DUP
	PUSHINT 1763419470
	EQUAL
	IFJMPREF {
		CALL $issueDidDoc$
	}
}
DUP
PUSHINT 1827541038
EQUAL
IFJMPREF {
	CALL $controllerPubKey$
}

